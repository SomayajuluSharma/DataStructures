public class deleteNodeBst {
    public static void main(String[] args) {
        TreeNode node = new TreeNode(15);
        node.left = new TreeNode(12);
        node.right = new TreeNode(20);
        node.left.left = new TreeNode(10);
        node.left.right = new TreeNode(14);
        node.right.left = new TreeNode(16);
        node.right.right = new TreeNode(27);
        node.left.left.left = new TreeNode(8);
        node.left.left.right = new TreeNode(11);

        int B = 10;
        solve(node);
        deleteNode(node,B);
        System.out.println(" ");
        solve(node);
    }
  
//print bst in inorder
static void solve(TreeNode node){
        if(node == null){
            return;
        }
        solve(node.left);
        System.out.print(node.val+" ");
        solve(node.right);
}
  
//deleteNode function
static TreeNode deleteNode(TreeNode A,int B){
    if(A == null){
      return null;
    }
      if(A.val == B){
        if(A.left == null){
            return A.right;
        }
        else if(A.right == null){
            return A.left;
        }
        TreeNode curr = A.left;
        while(curr.right != null){
            curr = curr.right;
        }
        int temp = curr.val;
        curr.val = A.val;
       A.val = temp;
        
       A.left = deleteNode(A.left,B);
    }
    else if(A.val < B){
        A.right = deleteNode(A.right,B);
    }
    else{
        A.left = deleteNode(A.left,B);
    }
    return A;
    }
}
//Node Class
class TreeNode{
  TreeNode left;
  TreeNode right;
  int val;
  TreeNode(int val){
  this.val = val;
    }
}
